public class Contact {
    private String name;
    private String phoneNumber;

    public Contact(String name, String phoneNumber){
        this.name = name;
        this.name = phoneNumber;
    }

    public String getName(){
        return name;
    }

    public String getPhoneNumber(){
        return phoneNumber;
    }

    public static Contact createContact (String name, String phoneNumber) {
        return new Contact (name, phoneNumber);
    }

    public static SecureMessage createMessage (String message, String sourceName, String destName, String key) {
        return new SecureMessage (key, message, sourceName, destName);
    }

    private ArrayList<String> messageList = new ArrayList<>();

    private ArrayList<String> userList = new ArrayList<>(Arrays.asList("Max", "James", "Cody", "Mike", "John"));

    public String findUser(String searchUser) {
            int position = myUsers.indexOf(searchUser);
            if (position >= 0) {
                return myUsers.get(position);
            }
            return null;
        }

        public static void addMessage() {
                System.out.println("Type the message you want to send: ");
                messageList.addMessage(scanner.nextLine());
            }

            public static void searchForUser(){
                System.out.println("Who do you want to send a message to?: ");
                userList.printUsers();
                String searchUser = scanner.nextLine();
                System.out.println("Message will be sent to " + searchUser);
            }

            public SecuritySystem(){
                    this.myUsers = new ArrayList<SecureMessage>(5);
                    this.messageList = new ArrayList<SecureMessage>();
                }

            private ArrayList<SecureMessage> myUsers = new ArrayList<SecureMessage>();
                private ArrayList<SecureMessage> messageList = new ArrayList<SecureMessage>();

                SecureMessage user = new SecureMessage("", "Max", "Max", "Jambieno");
                myUsers.add(user);

                public static ArrayList<SecureMessage> myUsers(){
                        SecureMessage user1 = new SecureMessage("","Max", "Max", "Jambieno");
                        SecureMessage user2 = new SecureMessage("", "Ksenia", "Ksenia", "Jambieno");
                        SecureMessage user3 = new SecureMessage("", "Sally", "Sally", "Jambieno");
                        SecureMessage user4 = new SecureMessage("", "Ali", "Ali", "Jambieno");
                        SecureMessage user5 = new SecureMessage("", "Tyrone", "Tyrone", "Jambieno");

                        ArrayList<SecureMessage> myUsers = new ArrayList<SecureMessage>();
                        myUsers.add(user1);
                        myUsers.add(user2);
                        myUsers.add(user3);
                        myUsers.add(user4);
                        myUsers.add(user5);

                        return myUsers;
                    }
}
========================================================================================================================

public void printNumberOfUnreadMessages(){
        System.out.println("There is " + messageList.size() + " unread message(s) in your inbox");
    }

    public void printMessageList(){
        for (int i = 0; i < messageList.size(); i++){
            System.out.println((i+1) + ". " + messageList.get(i));
        }
    }

    public void printUsers(){
        System.out.println("User List: ");
        for (int i = 0; i < myUsers.size(); i++) {
            System.out.println((i + 1) + ". " + myUsers.get(i).getDestName());
        }
    }

    private int findUser(SecureMessage user){
        return this.myUsers.indexOf(user);
    }

    public int findUser(String searchUser) {
       for (int i=0; i<this.myUsers.size(); i++){
           SecureMessage user = this.myUsers.get(i);
           if (user.getSourceName().equals(searchUser)){
               return i;
           }
       }
       return -1;
    }

    public String findUsers(SecureMessage user) {
        if (findUser(user) >= 0){
            return user.getDestName();
        }
        return null;
    }

    public SecureMessage findUsers(String name){
        int position = findUser(name);
        if (position >= 0){
            return this.myUsers.get(position);
        }
        return null;
    }

    private static void addNewMessage(){
            System.out.println("Type new message:");
            String message = scanner.nextLine();
            if (SecuritySystem.addMessage(message)){
                System.out.println("New Message Sent!");
            } else {
                System.out.println("Cannot Send Message!");
            }
